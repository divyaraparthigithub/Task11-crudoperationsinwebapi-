@model Task11_crud_.Models.Registration
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" >
<h2>Register</h2>
<div >
    <form method="post" action="@Url.Action("Register", "Account")" class="needs-validation" novalidate>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="mb-1">
            <label for="FirstName" class="form-label">First Name</label>
            <input type="text"  id="FirstName" name="FirstName" value="@Model.FirstName"required />
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        
        
        <div class="mb-1">
            <label for="LastName" class="form-label">Last Name</label>
                <input type="text" id="LastName" name="LastName" value="@Model.LastName" required />
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        
        <div class="mb-1">
            <label for="Email" class="form-label">Email</label>
            <input type="email"  id="Email" name="Email" required  value="@Model.Email"/>
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="mb-1">
            <label for="PhoneNumber" class="form-label">Phone Number</label>
            <input type="tel" id="PhoneNumber" name="PhoneNumber" value="@Model.PhoneNumber" pattern="[0-9]{10}" required />
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        

        <div class="mb-1">
            <label for="Address" class="form-label">Address</label>
            <input type="text"  id="Address" name="Address" value="@Model.Address" required />
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>

        <div class="mb-1">
            <label for="Password" class="form-label">Password</label>
            <input type="password"  id="Password" name="Password" value="@Model.Password" required />
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        

        <div class="mb-1">
            <label for="ConfirmPassword" class="form-label">Confirm Password</label>
            <input type="password"  id="ConfirmPassword" name="ConfirmPassword" value="@Model.ConfirmPassword" required />
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>


  @*      <div class="mb-3">
            <label for="SelectedCountry" class="form-label">Country</label>
            <select class="form-select form-select-sm" id="SelectedCountry" name="SelectedCountry" required>
                <option value="">Select Country</option>
                @foreach (var country in Model.Countries)
                {
                    <option action="GetState" controller="Account" value="@country @(Model.SelectedCountry == country ? "selected" : "")">@country</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.SelectedCountry, "", new { @class = "text-danger" })
        </div>

       <div class="mb-3">
            <label for="SelectedState" class="form-label">State</label>
            <select class="form-select form-select-sm" id="SelectedState" name="SelectedState" required>
        <option value="">Select State</option>
        @if (Model.SelectedCountry != null && Model.States.ContainsKey(Model.SelectedCountry))
        {
            foreach (var state in Model.States[Model.SelectedCountry])
            {
                <option value="@state" selected="@(Model.SelectedState == state ? "selected" : "")">@state</option>
            }
        }
    </select>
    @Html.ValidationMessageFor(model => model.SelectedState, "", new { @class = "text-danger" })
</div>*@
        <select id="SelectedCountry" name="SelectedCountry" asp-items="new SelectList(Model.Countries)">
            <option value="">Select Country</option>
            <option value="India">India</option>
            <option value="Australia">Australia</option>
           
        </select>

        <select id="SelectedState" name="SelectedState">
            <option value="">Select State</option>
        </select>
        <div >
            <input type="submit" class="btn btn-primary btn-sm" value="Register" />
        </div>
    </form>
</div>

<div class="container">
    @ViewBag.Message
</div>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        debugger;
        $('#SelectedCountry').change(function () {
            var selectedCountry = $(this).val();
            $('#SelectedState').empty();//clearing the existing states
            if (selectedCountry !== '') {
                $.ajax({
                    url: '/Account/GetStates', 
                    type: 'GET',
                    data: { selectedCountry: selectedCountry },
                    success: function (data) {
                        // states dropdown with the returned data
                        $.each(data, function (index, item) {
                            $('#SelectedState').append($('<option>', {
                                value: item,
                                text: item
                            }));
                        });
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            }
        });
    });
</script>
